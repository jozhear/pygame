# I talk about this on my website here; https://jozhear.ca/blog/20241113.html
# This runs a simple game with a main character piece and several pieces following behind it.

import pygame
import sys
from collections import deque

pygame.init()

screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Simple Game")

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
YELLOW = (255,255,0)
RED = (255,0,0)
GREEN = (0,255,0)
BLUE = (0,0,255)
ORANGE = (255,255,0)

player_width = 50
player_height = 50
player_x = (screen_width - player_width) // 2
player_y = screen_height - player_height - 20
player_speed = 5
movementSeperation = 10

# def data():
rope_segment = {}
rope_segment['X']= (screen_width - player_width) // 2
rope_segment['Y'] = (screen_height - player_height - 20)
rope_segment['Segment'] = 'Head'
rope_segment['Width'] = 50
rope_segment['Height'] = 50
rope_segments = []
rope_segments.append(rope_segment)
for i in range(1,9):
    rope_segment = {}
    rope_segment['X'] = (screen_width - player_width) // 2
    rope_segment['Y'] = (screen_height - player_height - 20)
    rope_segment['Segment'] = i
    rope_segment['Width'] = 50
    rope_segment['Height'] = 50
    numberOfMovements = i * movementSeperation
    rope_segment['queue'] = []
    for movement in range(numberOfMovements):
        rope_segment['queue'].append([])
    rope_segment['queue'] = deque(rope_segment['queue'])
    rope_segments.append(rope_segment)

movementLeft = False
movementRight = False
movementUp = False
movementDown = False
direction = []
possibleMovement = False
impossibleSpace = []
npcX = 500
npcY = 350

# Main game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    keys = pygame.key.get_pressed()

                
    
    if event.type == pygame.KEYDOWN:
        if keys[pygame.K_LEFT] and not keys[pygame.K_RIGHT]:
            possibleMovement = True
            movementLeft = True
        if keys[pygame.K_RIGHT] and not keys[pygame.K_LEFT]:
            movementRight = True
            possibleMovement = True
        if keys[pygame.K_DOWN] and not keys[pygame.K_UP]:
            movementDown = True
            possibleMovement = True
        if keys[pygame.K_UP] and not keys[pygame.K_DOWN]:
            possibleMovement = True
            movementUp = True
        if keys[pygame.K_LEFT] and keys[pygame.K_RIGHT]:
            possibleMovement = False
            movementLeft = False
            movementRight = False
        if keys[pygame.K_UP] and keys[pygame.K_DOWN]:
            possibleMovement = False
            movementUp = False
            movementDown = False
        if keys[pygame.K_UP] and keys[pygame.K_DOWN] and keys[pygame.K_RIGHT]:
            possibleMovement = False
            movementUp = False
            movementDown = False
            movementRight = False
        if keys[pygame.K_UP] and keys[pygame.K_DOWN] and keys[pygame.K_LEFT]:
            possibleMovement = False
            movementUp = False
            movementDown = False
            movementLeft = False
        if keys[pygame.K_UP] and keys[pygame.K_RIGHT] and keys[pygame.K_LEFT]:
            possibleMovement = False
            movementUp = False
            movementRight = False
            movementLeft = False
        if keys[pygame.K_DOWN] and keys[pygame.K_RIGHT] and keys[pygame.K_LEFT]:
            possibleMovement = False
            movementDown = False
            movementRight = False
            movementLeft = False
            
    if event.type == pygame.KEYUP:
        if event.key == pygame.K_LEFT:
            movementLeft = False
        if event.key == pygame.K_RIGHT:
            movementRight = False
        if event.key == pygame.K_DOWN:
            movementDown = False
        if event.key == pygame.K_UP:
            movementUp = False
            
    if not keys[pygame.K_LEFT]:
        movementLeft = False
    if not keys[pygame.K_UP]:
        movementUp = False
    if not keys[pygame.K_DOWN]:
        movementDown = False
    if not keys[pygame.K_RIGHT]:
        movementRight = False
            
    if movementLeft:
        player_x -= player_speed
        direction = ['left']
    if movementRight:
        player_x += player_speed
        direction = ['right']
    if movementDown:
        player_y += player_speed
        direction = ['down']
    if movementUp:
        player_y -= player_speed
        direction = ['up']
    if movementLeft and movementDown:
        direction = ['down','left']
    if movementLeft and movementUp:
        direction = ['up','left']
    if movementRight and movementDown:
        direction = ['down','right']
    if movementRight and movementUp:
        direction = ['up', 'right']
    if movementLeft == False and movementRight == False and movementUp == False and movementDown == False:
        possibleMovement = False
    
    
    if possibleMovement:
        for piece in rope_segments[1::]:
            piece['queue'].append(direction)
            currentMovement = piece['queue'].popleft()
            if currentMovement == ['left']:
                piece['X'] -= player_speed
            if currentMovement == ['right']:
                piece['X'] += player_speed
            if currentMovement == ['up']:
                piece['Y'] -= player_speed
            if currentMovement == ['down']:
                piece['Y'] += player_speed
            if currentMovement == ['down','left']:
                piece['Y'] += player_speed
                piece['X'] -= player_speed
            if currentMovement == ['up','left']:
                piece['Y'] -= player_speed
                piece['X'] -= player_speed
            if currentMovement == ['down','right']:
                piece['Y'] += player_speed
                piece['X'] += player_speed
            if currentMovement == ['up', 'right']:
                piece['Y'] -= player_speed
                piece['X'] += player_speed
            if currentMovement == []:
                piece['Y'] += 0
                piece['X'] += 0
    
    
    # Draw everything
    screen.fill(WHITE)
    pygame.draw.rect(screen, RED, (player_x, player_y, player_width, player_height))
    pygame.draw.rect(screen, BLUE, (rope_segments[1]['X'],rope_segments[1]['Y'], player_width, player_height))
    pygame.draw.rect(screen, GREEN, (rope_segments[2]['X'],rope_segments[2]['Y'], player_width, player_height))
    pygame.draw.rect(screen, BLUE, (rope_segments[3]['X'],rope_segments[3]['Y'], player_width, player_height))
    pygame.draw.rect(screen, BLUE, (rope_segments[4]['X'],rope_segments[4]['Y'], player_width, player_height))
    pygame.draw.rect(screen, GREEN, (rope_segments[5]['X'],rope_segments[5]['Y'], player_width, player_height))
    pygame.draw.rect(screen, BLUE, (rope_segments[6]['X'],rope_segments[6]['Y'], player_width, player_height))
    pygame.display.flip()


    pygame.time.Clock().tick(60)

pygame.quit()
sys.exit()
